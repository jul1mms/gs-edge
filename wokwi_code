#include <WiFi.h>
#include <PubSubClient.h>

// entrada
#define TRIGGER_PIN_1 23 
#define ECHO_PIN_1 22

// saída
#define TRIGGER_PIN_2 19
#define ECHO_PIN_2 18

const char *ssid = "Wokwi-GUEST";
const char *password = "";

int pessoasEntraram = 0;
int pessoasSairam = 0;
int pessoasNoLocal = 0;

const char* mqtt_server = "test.mosquitto.org";
WiFiClient espClient;
PubSubClient client(espClient);
const char* mqtt_topic_entraram = "/data/entraram";
const char* mqtt_topic_sairam = "/data/sairam";
const char* mqtt_topic_local = "/data/local";

void setup() {
  Serial.begin(9600);
  pinMode(TRIGGER_PIN_1, OUTPUT);
  pinMode(ECHO_PIN_1, INPUT);

  pinMode(TRIGGER_PIN_2, OUTPUT);
  pinMode(ECHO_PIN_2, INPUT);

  conectarWiFi();

  client.setServer(mqtt_server, 1883);
}

void loop() {
  int distanciaSensor1 = calcularDistancia(TRIGGER_PIN_1, ECHO_PIN_1);
  int distanciaSensor2 = calcularDistancia(TRIGGER_PIN_2, ECHO_PIN_2);

  if (distanciaSensor1 < 50) {
    delay(1000);
    if (distanciaSensor1 < 50) {
      pessoasEntraram++;
      pessoasNoLocal++;
      Serial.println("Alguém entrou! Pessoas no local: " + String(pessoasNoLocal));
    }
  }

  if (distanciaSensor2 < 50) {
    delay(1000);
    if (distanciaSensor2 < 50) {
      pessoasSairam++;
      pessoasNoLocal--;
      Serial.println("Alguém saiu! Pessoas no local: " + String(pessoasNoLocal));
    }
  }

  delay(1000);

  if (!client.connected()) {
    reconnect();
  }

  client.loop();

  client.publish(mqtt_topic_entraram, String(pessoasEntraram).c_str());
  client.publish(mqtt_topic_sairam, String(pessoasSairam).c_str());
  client.publish(mqtt_topic_local, String(pessoasNoLocal).c_str());

  delay(5000);
}

int calcularDistancia(int triggerPin, int echoPin) {
  digitalWrite(triggerPin, LOW);
  delayMicroseconds(2);
  digitalWrite(triggerPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(triggerPin, LOW);

  long duration = pulseIn(echoPin, HIGH);
  int distancia = duration * 0.034 / 2;

  return distancia;
}

void conectarWiFi() {
  Serial.print("Conectando-se à rede ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("Conectado à rede WiFi!");
  Serial.println("Endereço IP: ");
  Serial.println(WiFi.localIP());
}

void reconnect() {
  while (!client.connected()) {
    Serial.print("Tentando conectar ao MQTT...");
    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);

    if (client.connect(clientId.c_str())) {
      Serial.println("Conectado!");
      client.subscribe(mqtt_topic_entraram);
      client.subscribe(mqtt_topic_sairam);
      client.subscribe(mqtt_topic_local);
    } else {
      Serial.print("Falha na conexão, rc=");
      Serial.print(client.state());
      Serial.println(" Tentando novamente em 5 segundos");
      delay(5000);
    }
  }
}
